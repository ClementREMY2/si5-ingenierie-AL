version: '3.8'

services:
  influxdb-cloud:
    image: influxdb:latest
    container_name: influxdb-cloud
    ports:
      - "8087:8086"
    volumes:
      - ./influxdb:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=alm-org
      - DOCKER_INFLUXDB_INIT_BUCKET=alm-sensors
      - DOCKER_INFLUXDB_INIT_RETENTION=168h
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=alm_token_cloud
    restart: unless-stopped

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      - INFLUXDB_URL=http://influxdb-cloud:8087
      - INFLUXDB_TOKEN=alm_token_cloud
      - INFLUXDB_ORG=alm-org
      - INFLUXDB_BUCKET=alm-sensors
    depends_on:
      - influxdb-cloud
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped

  create_api_key:
    image: curlimages/curl:latest
    container_name: create_api_key
    depends_on:
      - influxdb-cloud
      - grafana
    volumes:
      - ./create_api_key.sh:/create_api_key.sh
    entrypoint: ["sh", "/create_api_key.sh"]
    restart: "no"
