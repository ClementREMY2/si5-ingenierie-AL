version: '3'
services:
  devices-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: devices-service
    env_file:
      - .env
    environment:
      - GATEWAY_CONTROL_MQTT_BROKER_ADDRESS=host.docker.internal
      - GATEWAY_CONTROL_MQTT_BROKER_PORT=2084
    container_name: devices-service
    networks:
      - app-network

  users-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: users-service
    env_file:
      - .env
    container_name: users-service
    networks:
      - app-network

  healthchecks-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: healthchecks-service
    env_file:
      - .env
    container_name: healthchecks-service
    networks:
      - app-network

  notifications-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: notifications-service
    env_file:
      - .env
    container_name: notifications-service
    networks:
      - app-network     

  feedbacks-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: feedbacks-service
    env_file:
      - .env
    container_name: feedbacks-service
    networks:
      - app-network


  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: auth-service
    env_file:
      - .env
    container_name: auth-service
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080" 
    networks:
      - app-network


  postgres-db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data  
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

volumes:
  postgres-data:
  
networks:
  app-network:
    driver: bridge
